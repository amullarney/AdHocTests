-- BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

INSERT INTO EP_PKG
	VALUES ("6a4a82e9-5119-463b-b210-5e00c3ece052",
	"00000000-0000-0000-0000-000000000000",
	"846e9e70-104d-4678-8694-b2e3922e335a",
	'TestFunctions',
	'',
	0);
INSERT INTO GD_MD
	VALUES ("c5df5776-d86a-449a-b794-4d7eb5cea450",
	112,
	"6a4a82e9-5119-463b-b210-5e00c3ece052",
	108,
	0,
	0,
	1,
	1,
	1,
	12,
	1,
	0,
	0,
	0,
	0,
	0,
	'4.1.17',
	'Tests::Components::Test::TestFunctions');
INSERT INTO DIM_DIA
	VALUES ("c5df5776-d86a-449a-b794-4d7eb5cea450",
	'',
	1.000000,
	0.000000,
	0.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO S_SYNC
	VALUES ("11a44be8-a1a3-4c0b-9871-0a634b5e8920",
	"00000000-0000-0000-0000-000000000000",
	'TestEventPending',
	'A test to show that an event which caused a transition into a state is misleadingly 
displayed as pending in Verifier''s Session Explorer.
Set a breakpoint in state "looking" of observation class before executing this function.
View the instance in Session Explorer: event "peek" is shown as pending.',
	'create object instance glance of observation;
generate observation1:peek() to glance;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0,
	0);
INSERT INTO PE_PE
	VALUES ("11a44be8-a1a3-4c0b-9871-0a634b5e8920",
	1,
	"6a4a82e9-5119-463b-b210-5e00c3ece052",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("78879f39-c2a4-467e-8b01-dea55e9d8ab9",
	"00000000-0000-0000-0000-000000000000",
	'PipeTest',
	'',
	'create object instance pipe1 of pipe;
create object instance pipe2 of pipe;
relate pipe2 to pipe1 across R2.''connects to'';
pipe2.empty = true;
create object instance pipe3 of pipe;
relate pipe3 to pipe1 across R2.''connects to'';
create object instance pipe4 of pipe;
relate pipe4 to pipe1 across R2.''connects to'';
create object instance pipe5 of pipe;
relate pipe5 to pipe1 across R2.''connects to'';

select many segments related by pipe1->pipe[R2.''attaches to'']
 where ( not selected.empty  );
for each segment in segments
	LOG::LogSuccess( message:"found one" );
end for;
',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0,
	0);
INSERT INTO PE_PE
	VALUES ("78879f39-c2a4-467e-8b01-dea55e9d8ab9",
	1,
	"6a4a82e9-5119-463b-b210-5e00c3ece052",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("0fc6c5a7-d306-40e5-a30c-a8e0e6ab5da8",
	"00000000-0000-0000-0000-000000000000",
	'Testtrigger',
	'',
	'create object instance obs1 of observation;
create object instance trigger1 of trigger;
relate obs1 to  trigger1 across R10.''waits for'';
unrelate obs1 from trigger1 across R10.''waits for'';
select any obs1 related by trigger1->observation[R10.''initiates''];
if ( empty obs1 )
  delete object instance trigger1;
end if;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0,
	0);
INSERT INTO PE_PE
	VALUES ("0fc6c5a7-d306-40e5-a30c-a8e0e6ab5da8",
	1,
	"6a4a82e9-5119-463b-b210-5e00c3ece052",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("1f8e0ab5-2dd3-4153-bd5e-4145b872766e",
	"00000000-0000-0000-0000-000000000000",
	'PersistTest',
	'',
	'LOG::LogInfo( message:"Trying to load from stdin" );
SQL::load();

select any obv from instances of observation;
if ( empty obv )
  LOG::LogInfo( message:"creating instances programatically" );
  ::Testtrigger();
  LOG::LogInfo( message:"created..." );
else
  LOG::LogInfo( message:"Sucessfully loaded persisted data - exploring what we got:" );
  select many obvs from instances of observation;
  select many trgs related by obvs->trigger[R10.''waits for''];
  if ( not_empty trgs )
  	LOG::LogInfo( message:"found triggers" );
  end if;
  select any trg from instances of trigger;
  select many onlookers related by trg->observation[R10.''initiates'']->watcher[R25.''is reported to''];
end if;

LOG::LogInfo( message:"persisting..." );
SQL::serialize_file( file:"persisted.sql" );

LOG::LogInfo( message:"done" );

control stop;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0,
	0);
INSERT INTO PE_PE
	VALUES ("1f8e0ab5-2dd3-4153-bd5e-4145b872766e",
	1,
	"6a4a82e9-5119-463b-b210-5e00c3ece052",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("9412d2d4-9488-4981-b09d-3e3e4e39b42c",
	"00000000-0000-0000-0000-000000000000",
	'SuperTest',
	'',
	'create object instance ac of Aircraft;
ac.number = "EI-123";
create object instance jet of Jet;
jet.make = "Airbus";
jet.wingspan = 120;
relate jet to ac across R12;

create object instance ac of Aircraft;
ac.number = "1055W";
create object instance glider of Glider;
glider.wingspan = 15;
relate glider to ac across R12;


create object instance isaA of classA;
create object instance isaB of classB;
relate isaB to isaA across R14.''is a'';',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0,
	0);
INSERT INTO PE_PE
	VALUES ("9412d2d4-9488-4981-b09d-3e3e4e39b42c",
	1,
	"6a4a82e9-5119-463b-b210-5e00c3ece052",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO PE_PE
	VALUES ("6a4a82e9-5119-463b-b210-5e00c3ece052",
	1,
	"00000000-0000-0000-0000-000000000000",
	"7bf54281-dcf1-4f23-91f6-05c5083cfd18",
	7);
INSERT INTO C_C_PROXY
	VALUES ("7bf54281-dcf1-4f23-91f6-05c5083cfd18",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	'Test',
	'Two test functions exercise one-shot and recurring timers.

When run deterministically - with simulated time ( no choice but to do so ) the action is as expected.
Log messages stream continuously to the console.

When run deterministically is unchecked - simulated time is still checked - nothing happens. (And restart does not alter this).

When simulated time is unchecked( and deterministically unchecked ) log messages arrive separated in real time - as expected. 
( This requires restart if simulated time has been run ).',
	0,
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'',
	'../Test.xtuml');
INSERT INTO S_SYS_PROXY
	VALUES ("846e9e70-104d-4678-8694-b2e3922e335a",
	'Tests',
	1,
	'../../../Tests.xtuml');
